{"version":3,"sources":["components/cv.js","components/homeComponent.js","components/userLocationComponent.js","components/airQulityComponent.js","serviceWorker.js","index.js","App.js"],"names":["Home","react_default","a","createElement","className","target","href","UserLocationComponent","_useState","useState","_useState2","Object","slicedToArray","currentPosition","setCurrentPosition","useEffect","getCurrentPosition","options","arguments","length","undefined","Promise","resolve","reject","navigator","geolocation","_ref","asyncToGenerator","regenerator_default","mark","_callee","_ref2","coords","latitude","longitude","wrap","_context","prev","next","sent","toFixed","join","t0","console","error","stop","apply","this","fetchCoordinates","concat","AirQuality","leafType","setLeafType","_useState3","_useState4","airVisualData","setAirVisualData","_useState5","_useState6","waqiData","setWaqiData","_useState7","_useState8","indexDescription","setIndexDescription","api","_getAllData","request","get","then","res","t1","JSON","parse","text","data","current","pollution","aqius","aqi","co2Level","getAllData","Container","Row","Col","Boolean","window","location","hostname","match","ReactDOM","render","id","react_router_dom","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","exact","activeClassName","to","react_router","path","component","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.61053a02.chunk.js","sourcesContent":["import React  from 'react';\n\nexport default function Home (){\n  return (\n<div className=\"container\">\n  <div className=\"row background-image\">\n    <div className=\"col-sm vertical-col-sm\">\n      <div className=\"avatar\"></div>\n      <p className=\"hello-world\">Hello World!</p>\n    </div>\n    <div className=\"col-sm vertical-col-sm\">\n      <p className=\"avatar-description\">My name is Vlad Palii. <br /> Senior Full-Stack Software Engineer.</p>\n    </div>\n  </div>\n  <div className=\"row\">\n    <div className=\"col-sm\">\n      <h2>\n        Overall\n      </h2>\n      <p className=\"short-description\">Over the past six years I've worked in several medical companies as a developer\n        with a different amount of technologies. There is some of them: JavaScript, TypeScript,\n        NodeJS, Express.js, MongoDB, MySQL, Vanilla JS, ES5, ES6, JQuery, AngularJS, Angular 2+, PolymerJS, Three JS,\n        React JS, Webpack, Gulp, QUnit, Karma, UML, OOP, Design Patterns, Overall product design, Design\n        Documentation.</p>\n    </div>\n    <div className=\"col-sm\">\n      <h2>Contacts</h2>\n      <div>\n        <ul className=\"short-description contacts\">\n          <li>\n            <a className=\"icon-linkedin\" target=\"_blank\" href=\"https://www.linkedin.com/in/vladpalii/\">Vlad Palii</a>\n          </li>\n          <li>\n            <a className=\"icon-skype\" href=\"skype:paliy.work?chat\">paliy.work</a>\n          </li>\n          <li>\n            <a className=\"icon-github\" target=\"_blank\" href=\"https://github.com/vladyslav-palii\">vladyslav-palii</a>\n          </li>\n          <li>\n            <a className=\"icon-phone\" href=\"tel:+380639822792\">+380639822792</a>\n          </li>\n          <li>\n            <a className=\"icon-mail\" href=\"mailto:paliy.work@gmail.com\">paliy.work@gmail.com</a>\n          </li>\n          <li>\n            <b>Download CV: </b> <a href=\"#\">doc</a>, <a href=\"#\">pdf</a>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </div>\n\n  <div className=\"row\">\n    <div className=\"col-sm\">\n      <div className=\"short-description\">\n        <h5>Technologies:</h5>\n        <p>\n          <b>Systems (platforms): </b>Win, Linux, MacOS.<br />\n          <b>DB’s: </b> MySQL, PostgreSQL, SQLite, Redis, Mongo.<br />\n          <b>Languages: </b>JavaScript (ES5, ES6), TypeScript, HTML5, CSS3.<br />\n          <b>Tools: </b>GIT, TFS, JetBrains IDEs, Visual Studio, VSCode.<br />\n          <b>Technologies (libraries): </b>TCP-IP, Express, Mongoose, SocketIO, AJAX, VanillaJS, jQuery, ReactJS,\n          AngularJS, Angular8+, PolymerJS, ThreeJS, Webpack, Grunt, Gulp, Bower, Yarn, NPM, Karma, qUnit, Chai, Mocha,\n          SCSS.<br />\n          <b>Infrastructure (CICD): </b>Docker, CIrcleCI, AWS, NginX.<br />\n          <b>Methodologies (processes): </b>Agile, Scrum, Kanban, Lean, XP, Overall product design, Design\n          Documentation, SRS, SDS.<br />\n          <b>Principles: </b>KISS, DRY, SOLID, OOP, REST API, TDD, DDD, Design Patterns.<br />\n          <b>Management: </b>Atlassian, TFS, Trello, UML.<br />\n          <b>Little familiar with: </b>Python/Django, C#/.NET/Razor, Java/Spring, rbenv/Ruby/RoR/.<br />\n        </p>\n      </div>\n    </div>\n  </div>\n  <br />\n\n  <div className=\"row\">\n    <div className=\"col-sm\">\n      <div className=\"short-description\">\n        <h5>Senior Full-Stack Software Engineer @ Pavilion Health (2018-2020):</h5>\n        <small>Enterprise application for ICD-10 medical and patients data management (Healthcare).</small>\n        <p>\n          When I started to work here, the current huge medical software ecosystem was in a battered condition.\n          Completely bad codebase without any comments, without design or requirement documentation, without access to\n          previous developers. But I've coped with it. A huge part of application was redesigned, and a tons of legacy\n          code and bugs fixed/refactored. UI interface renewed. Performance improved x2. Added unit testing and linked\n          with CircleCI environment. Implemented SDLC with SCRUM. Implemented SRS SDS.\n        </p>\n      </div>\n    </div>\n  </div>\n  <br />\n  <div className=\"row\">\n    <div className=\"col-sm\">\n      <div className=\"short-description\">\n        <h5>Middle Software Engineer @ Materialise NV (2016-2018):</h5>\n        <small>Enterprise application for 3d visual planning of surgeon operations on human's knee and shoulders based\n          on CT/MRI data (Healthcare).</small>\n        <p>\n          Here I've taken part in the development of 3D scenes, REST-API web app parts, and related UX/UI elements and\n          tools.\n        </p>\n      </div>\n    </div>\n  </div>\n  <br />\n  <div className=\"row\">\n    <div className=\"col-sm\">\n      <div className=\"short-description\">\n        <h5>Junior Software Engineer @ Lanet Network (2014-2016):</h5>\n        <small>Design and development of Smart TV & Android TV applications (Telecommunications).</small>\n        <p>\n          Overall design and prototyping of online TV single-page application. Implementing via VanillaJS, AngularJS,\n          jQuery. Unit testing. Company Web-site support. Implementation of internet speed measurement tool.\n        </p>\n      </div>\n    </div>\n  </div>\n  <br />\n  <div className=\"row\">\n    <div className=\"col-sm\">\n      <div className=\"short-description\">\n        <h5>Super Ultra Mega Junior @ Home (2007-2011):</h5>\n        <p>\n          Implementing some web stuff on html and css. Creating horrible .bat/cmd scripts. Trying to hack NASA via css\n          (ha-ha). Setup home based game server for CS1.6/LA2.\n        </p>\n      </div>\n    </div>\n  </div>\n\n  <div className=\"row\">\n    <div className=\"col-sm\">\n      <h2>The Story</h2>\n      <div className=\"short-description\">\n        The first program I wrote when I was 14 years old, it was a \".bat\" and then web simulation of computer\n        terminal from Fallout\n        2 game.\n      </div>\n    </div>\n  </div>\n\n  <div className=\"row\">\n    <div className=\"col-sm\">\n      <h2>Personal</h2>\n      <div className=\"short-description\">\n        At my free time as possible, I'm interested in history, psychology, neuroscience, electronics,\n        mechanical engineering, space engineering, etc. Also a big fan of travel. And now it's more than 12 countries\n        on\n        my count. Half marathon runner.\n      </div>\n    </div>\n  </div>\n\n  <div className=\"row\">\n\n    <div className=\"col-sm\">\n      <h2>\n        Education\n      </h2>\n\n      <div className=\"short-description\">\n        <h5>Kyiv National University (2011-2016):</h5>\n        <small>Master’s Degree in Computer Science.</small>\n      </div>\n\n    </div>\n\n  </div>\n  <br />\n  <br />\n</div>\n\n  )\n}","import React  from 'react';\nimport CV from './cv';\n\nexport default function Home (){\n  return (\n   <div>\n     <CV></CV>\n   </div> \n  )\n}","import React, { useState, useEffect } from 'react';\n\nexport default function UserLocationComponent() {\n\n  let [currentPosition, setCurrentPosition] = useState(\"Detecting position...\");\n\n  useEffect(() => {\n\n    function getCurrentPosition(options = {}) {\n      return new Promise((resolve, reject) => {\n        navigator.geolocation.getCurrentPosition(resolve, reject, options);\n      });\n    };\n\n    let fetchCoordinates = async () => {\n      try {\n        let { coords } = await getCurrentPosition();\n        let { latitude, longitude } = coords;\n        setCurrentPosition([latitude.toFixed(3), longitude.toFixed(3)].join(\", \"))\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    fetchCoordinates();\n\n  });\n\n  return (\n    <p><b>You are here: </b>{`${currentPosition}`}</p>\n  )\n\n}\n","import React, { useState, useEffect } from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport request from 'superagent'\nimport './../App.scss';\nimport UserLocationComponent from './userLocationComponent'\n\nexport default function AirQuality() {\n\n  let [leafType, setLeafType] = useState(\"health-leaf\");\n  let [airVisualData, setAirVisualData] = useState(\"0\");\n  let [waqiData, setWaqiData] = useState(\"0\");\n  let [indexDescription, setIndexDescription] = useState(\"Processing...\");\n\n  function setDescriptionByCO2(co2Level) {\n    if (co2Level > 0 < 50) {\n      setIndexDescription(\"Good\")\n    }\n    else if (co2Level > 51 < 100) {\n      setIndexDescription(\"Normal\")\n    }\n    else if (co2Level > 101 < 150) {\n      setIndexDescription(\"Unhealthy\")\n      setLeafType(\"sick-leaf\")\n    }\n    else if (co2Level > 151) {\n      setIndexDescription(\"DANGER\")\n      setLeafType(\"dead-leaf\")\n    }\n  }\n\n  useEffect(() => {\n\n    let airVisualResult = {}\n    let waqiResult = {}\n\n    let api = [airVisualResult, waqiResult];\n\n    async function getAllData() {\n\n      api = [await getO2Level(), await getWaqiData()];\n\n      setAirVisualData(JSON.parse(api[0].text).data.current.pollution.aqius);\n      setWaqiData(JSON.parse(api[1].text).data.aqi);\n      setDescriptionByCO2(JSON.parse(api[0].text).data.current.pollution.aqius);\n    }\n\n    getAllData();\n\n  });\n\n  function getO2Level() {\n\n    return new Promise(resolve => {\n      //37bff4af-0639-4402-a226-e188eb44984e - new key\n      request.get(\"http://api.airvisual.com/v2/city?city=kyiv&state=Kyiv&country=Ukraine&key=37bff4af-0639-4402-a226-e188eb44984e\")\n        .then(res => {\n          resolve(res);\n        })\n\n    });\n\n  }\n\n  function getWaqiData() {\n\n    return new Promise(resolve => {\n      //waqi token = ed785b8620760c78d6723bc2f920080be62fa297\n      request.get(\"https://api.waqi.info/feed/kiev/?token=ed785b8620760c78d6723bc2f920080be62fa297\")\n        .then(res => {\n          resolve(res);\n        })\n\n    });\n\n  }\n\n  return (\n    <Container>\n    <h2 className=\"page-header\">Air Quality in your location (React hooks):</h2>\n      <Row>\n        <Col className={`card background-image-card ${leafType}`}>\n          <div className=\"sensor-info\">\n            <h1 className=\"main-counter\">{airVisualData} of 500</h1><h4>Air Visual AQI</h4><br />\n            <h1 className=\"main-counter\">{waqiData} of 500</h1><h4>WAQI</h4><br />\n            <p className=\"sensor-description\">{`${indexDescription}`}</p> \n            <UserLocationComponent></UserLocationComponent>\n          </div>\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport { BrowserRouter as Router, Route, NavLink } from \"react-router-dom\";\nimport './App.scss';\nimport Home from './components/homeComponent'\nimport AirQuality from './components/airQulityComponent'\n\nexport default function App() {\n\n\n\n\n\n  return (\n    <div id=\"app\" >\n    {/* className=\"synthwave-i\" bg-header-synthwave*/}\n    <Router>\n      <nav className=\"navbar navbar-expand-lg navbar-light \">\n        <a className=\"navbar-brand\" href=\"#\"></a>\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n          <ul className=\"navbar-nav\">\n            <li className=\"nav-item\">\n              <NavLink exact className=\"nav-link\" activeClassName=\"active\" to=\"/\">CV</NavLink>\n            </li>\n            <li className=\"nav-item\">\n              <NavLink exact className=\"nav-link\" activeClassName=\"active\" to=\"/air-quality-pet\">Air Quality</NavLink>\n            </li>\n          </ul>\n        </div>\n      </nav>\n\n      <Route exact path=\"/\" component={Home} />\n      <Route exact path=\"/air-quality-pet\" component={AirQuality} />\n    </Router>\n\n    </div>\n  );\n}"],"sourceRoot":""}